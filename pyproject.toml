
[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "logbook-parser"
description = "logbook-parser_short_description"
# readme = "README.rst"
requires-python = ">=3.10"
keywords = ["Python"]
license = { file = "LICENSE" }
authors = [{ name = "Chad Lowe" }, { email = "pfmsoft.dev@gmail.com" }]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dependencies = ["airportsdata", "more-itertools"]
version = "v0.0.1"
# dynamic = ["version", "readme"]

# [tool.setuptools.dynamic]
# version = { attr = "logbook_parser.__version__" }
# readme = { file = ["README.rst"] }

# [tool.setuptools.packages.find]
# where = ["src"]
[project.urls]
Documentation = "https://github.com/DonalChilde/logbook-parser#readme"
Documentation_rtd = "https://logbook-parser.readthedocs.io"
Issues = "https://github.com/DonalChilde/logbook-parser/issues"
Source = "https://github.com/DonalChilde/logbook-parser"
[project.optional-dependencies]
dev = [

    # Automation
    "nox",
    "pre-commit",

    # Formatting
    "black",
    "isort",

    # Tools

]
lint = ["pylint", "mypy"]
doc = [
    # Documentation
    "Sphinx",
    "sphinx-autobuild",
    "sphinx-autodoc-typehints",
    "sphinx_rtd_theme",
    "myst-parser",
    "sphinx-click",
]
vscode = ["esbonio", "rst2html", "rstcheck"]
testing = [
    "pytest",
    "coverage[toml]",
    "pygments",
    "pytest-cov",
    "pysnooper",
    "devtools",
]
# dev = [
#     # Packaging and Distribution
#     # NOTE: pip and setuptools should be installed/upgraded separately
#     "wheel",
#     "twine",
#     "pip-tools",
#     "build",

#     # Linting and Formatting
#     "black",
#     "coverage",
#     "pylint",
#     "mypy",
#     # "doc8",

#     # Testing
#     "tox",
#     "pytest",
#     "pytest-cov",

#     # Source control
#     "pre-commit",

#     # Tools
#     "pysnooper",

#     # Documentation
#     "Sphinx",
#     "sphinx-autobuild",
#     "sphinx-autodoc-typehints",
#     "sphinx_rtd_theme",
#     "myst-parser",

#     # Vscode
#     "esbonio",
#     "rst2html",
#     "rstcheck",
# ]


[project.scripts]
aa-logbook-parser = "logbook_parser.logbook_parser:cli"

[tool.isort]
profile = "black"
src_paths = ["src", "test"]

[tool.black]
line-length = 88
target-version = ['py310']

# https://pylint.pycqa.org/en/latest/user_guide/usage/run.html#command-line-options
# https://pylint.pycqa.org/en/latest/user_guide/configuration/all-options.html#standard-checkers
# pylint --generate-toml-config > ./pylint-toml-example.toml
# [tool.pylint.messages_control]
# disable = [
#     "raw-checker-failed",
#     "bad-inline-option",
#     "locally-disabled",
#     "file-ignored",
#     "suppressed-message",
#     "useless-suppression",
#     "deprecated-pragma",
#     "use-symbolic-message-instead"
# ]

[tool.pylint.format]
# for black compatability
max-line-length = "92"
[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"


[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
# omit the snippets directory, as they are often included without tests.
omit = ["*/snippets/*"]
# # fail_under = 100

[tool.coverage.html]
directory = "htmlcov"

# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# [tool.pytest.ini_options]
# minversion = "6.0"
# addopts = "-ra -q"
# testpaths = [
#     "tests",
#     "integration",
# ]
